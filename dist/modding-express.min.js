const ModdingExpress=function(){let _this=this;return function(opts){game.custom.__MODDING_EXPRESS_DATA__||(game.custom.__MODDING_EXPRESS_DATA__={loaders:new Map});let moduleStack=new Map([["tick",[]],["event",[]],["playerTick",[]],["playerEvent",[]]]),{terminal:terminal,commands:commands}=game.modding,{echo:echo}=terminal,globalTick=_this.tick,globalEvent=_this.event,globalOptions=_this.options||{},modTick=function(game){for(let mod of moduleStack.get("tick")){let halt=!1,tick=safeExec(mod,_this,game,(function(){halt=!0}));if(tick.success||(error("Failed to run tick script, caught error:"),error(tick.error?.stack||"")),halt)break}for(let ship of game.ships)for(let mod of moduleStack.get("playerTick")){let halt=!1,tick=safeExec(mod,_this,ship,game,(function(){halt=!0}));if(tick.success||(error("Failed to run player tick script, caught error:"),error(tick.error?.stack||"")),halt)break}let globalRun=safeExec(globalTick,_this,game);globalRun.success||(error("Failed to run this.tick script, caught error:"),error(globalRun.error?.stack||""))},modEvent=function(event,game){for(let mod of moduleStack.get("event")){let halt=!1,eventExec=safeExec(mod,_this,event,game,(function(){halt=!0}));if(eventExec.success||(error("Failed to run event script, caught error:"),error(eventExec.error?.stack||"")),halt)break}let globalRun=safeExec(globalEvent,_this,event,game);globalRun.success||(error("Failed to run this.event script, caught error:"),error(globalRun.error?.stack||""));let ship=event.killer||event.ship;if(ship)for(let mod of moduleStack.get("playerEvent")){let halt=!1,shipEvent=safeExec(mod,_this,ship,event,game,(function(){halt=!0}));if(shipEvent.success||(error("Failed to run player event script, caught error:"),error(shipEvent.error?.stack||"")),halt)break}};try{Object.defineProperty(_this,"tick",{get:function(){return modTick},set:function(value){globalTick=value}})}catch(e){return void error("Fatal: Failed to overwrite tick function.")}try{Object.defineProperty(_this,"event",{get:function(){return modEvent},set:function(value){globalEvent=value}})}catch(e){return void error("Fatal: Failed to overwrite event function.")}try{Object.defineProperty(_this,"options",{get:function(){return globalOptions},set:function(value){Object.assign(globalOptions,value)}})}catch(e){return void error("Fatal: Failed to overwrite options.")}let message=function(msg){echo(`[[bg;#fff;]&lsqb;ModdingExpress&rsqb; ${msg.replace(/\[/g,"&lsqb;").replace(/\]/g,"&rsqb;")}]`)},error=function(msg){echo(`[[bg;orange;]&lsqb;ModdingExpress&rsqb; ${msg.replace(/\[/g,"&lsqb;").replace(/\]/g,"&rsqb;")}]`)},safeExec=function(func,bindThis,...args){if("function"==typeof func)try{func.call(bindThis,...args)}catch(error){return{success:!1,error:error}}return{success:!0}},moduleName=function(obj){return`${obj.name||"Unknown"} (v${obj.version||"1.0"}) by ${obj.author||"Unknown"}`},expressData=game.custom.__MODDING_EXPRESS_DATA__,loadModule=function(obj,opts,reference=null){if(!obj)throw error(reference?`Failed to resolve middleware from ${reference}: Received value is blank.`:"Failed to resolve a blank middleware."),"";let init=safeExec(obj.load,obj,dist,opts);if(!init.success)throw error(`Failed to run load script for middleware ${moduleName(obj)}, caught error:`),error(init.error?.stack||""),"";if(Array.isArray(obj.commands)){let i=0;for(let command of obj.commands){let index=i++;command&&(command.name?"function"==typeof command.handler?commands[command.name]=command.handler:error(`Failed to load command '${command.name}' in ${moduleName(obj)}: Missing command handler function.`):error(`Failed to load command index ${index} in ${moduleName(obj)}: Missing command name.`))}}return message(`Loaded module: ${moduleName(obj)}`),obj.exports};const resolveURL=function(url){url=url.trim();try{new URL(url)}catch(e){url=`https://raw.githubusercontent.com/Bhpsngum/starblast-modding-express/refs/heads/main/middleware/${url}/index.js`}return url};let dist={unbind:function(event,...handlers){let loaders=moduleStack.get(event);if(loaders)if(handlers.length)for(let handler of handlers){let index=loaders.indexOf(handler);index>-1&&loaders.splice(index,1)}else loaders.length=0},bind:function(event,...handlers){let loaders=moduleStack.get(event);loaders&&loaders.push(...handlers)},replace:function(event,originalHandler,...handlers){let loaders=moduleStack.get(event);if(!loaders)return;let index=loaders.indexOf(originalHandler);index>-1?loaders.splice(index,1,...handlers):loaders.push(...handlers)},load:function(handle,opts,force=!1){if("string"!=typeof handle)return loadModule(handle,opts);handle=resolveURL(handle);let cachedModule=expressData.loaders.get(handle);if(!force&&cachedModule)return loadModule(cachedModule,opts,handle);let xmlhttp=new XMLHttpRequest;xmlhttp.open("GET",handle,!1);try{xmlhttp.send()}catch(e){return error(`Failed to resolve URL "${handle}": Fetch failed.`),{}}try{cachedModule=Function("game",xmlhttp.responseText)(game)}catch(e){return error(`Failed to resolve URL "${handle}": Error when evaluating code.`),error(e.stack),{}}expressData.loaders.set(handle,cachedModule);try{return loadModule(cachedModule,opts,handle)}catch(e){return{}}}};return Object.defineProperties(dist,{options:{configurable:!1,enumerable:!0,writable:!1,value:globalOptions},sourceURLs:{get:function(){return[...expressData.loaders.keys()]}}}),dist}}.call(this);